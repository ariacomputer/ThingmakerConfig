# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v2.0. To use this config, the firmware should be compiled for the
# STM32F103 with a "28KiB bootloader". Also, select "Enable extra
# low-level configuration options" and configure "GPIO pins to set at
# micro-controller startup" to "!PA14".

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PB13
dir_pin: PB12
enable_pin: !PB14
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC0
position_endstop: 0
position_max: 235
homing_speed: 50

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 360

[stepper_y]
step_pin: PB10
dir_pin: PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC1
position_endstop: 0
position_max: 235
homing_speed: 50

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.580
hold_current: 0.500
stealthchop_threshold: 360

[stepper_z]
step_pin: PB0
dir_pin: !PC5
enable_pin: !PB1
microsteps: 16
rotation_distance: 4
endstop_pin: probe:z_virtual_endstop
position_min: -0.75
position_max: 300

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.880
hold_current: 0.800
stealthchop_threshold: 5

[extruder]
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD2
microsteps: 16
rotation_distance: 33.500
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
control: pid
pid_Kp: 29.227
pid_Ki: 2.118
pid_Kd: 100.832
min_temp: 0
max_temp: 300

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.650
hold_current: 0.500
stealthchop_threshold: 5

[heater_bed]
heater_pin: PC9
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC3
control: pid
pid_Kp: 71.435
pid_Ki: 1.434
pid_Kd: 889.363
min_temp: 0
max_temp: 140

[bltouch]
sensor_pin: ^PC2
control_pin: PA1
x_offset: 42.73
y_offset: 4.58
z_offset: 2.70
speed: 4.0
samples: 2
sample_retract_dist: 3.0

[safe_z_home]
home_xy_position: 100,100
speed: 150.0
z_hop: 10.0
z_hop_speed: 5.0

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 50,30
mesh_max: 170,190
probe_count: 5,5
fade_start: 1
fade_end: 10

#[filament_switch_sensor e0_sensor]
#switch_pin: PC15
#pause_on_runout: False
#runout_gcode:
#  M600

[pause_resume]

[respond]
default_type: echo

[heater_fan nozzle_cooling_fan]
pin: PC7

[fan]
pin: PC6

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_30FFD7054250323637681257-if00

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100


[static_digital_output usb_pullup_enable]
pins: !PA14

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB5, EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PB15, EXP1_10=<5V>
    
[display]
lcd_type: st7920
cs_pin: EXP1_7
sclk_pin: EXP1_6
sid_pin: EXP1_8
encoder_pins: ^EXP1_5, ^EXP1_3
click_pin: ^!EXP1_2
#kill_pin: ^!EXP2_8


[gcode_macro G27]
default_parameter_X: 20
default_parameter_Y: 340
default_parameter_Z: 20
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
    {printer.gcode.action_respond_info("Please home XYZ first")}
  {% else %}
    SAVE_GCODE_STATE NAME=G27_state
    G91
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    RESTORE_GCODE_STATE NAME=G27_state
  {% endif %}

[gcode_macro G29]
default_parameter_T: 0
gcode:
  {% if printer.toolhead.status == "Printing" %}
    {printer.gcode.action_respond_info("This command cannot be used while printing")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    {printer.gcode.action_respond_info("Please home XYZ first")}
  {% else %}
    SAVE_GCODE_STATE NAME=G29_state
    G90
    G1 Z10 F240
    {% if T|int > 30 %}
      M190 S{T}
    {% endif %}
    BED_MESH_CALIBRATE
    {% if 'S' in params %}
      M140 S{S}
    {% endif %}
    G90
    G1 Z10 F240
    G1 X150 Y155 F6000
    RESTORE_GCODE_STATE NAME=G29_state
  {% endif %}

[gcode_macro M204]
rename_existing: M204.1
default_parameter_F: 0.5
gcode:
  {% if 'S' in params %}
    SET_VELOCITY_LIMIT ACCEL={S} ACCEL_TO_DECEL={ S|float * F|float }
  {% else %}
    {% if 'P' in params %}
      {% if 'T' in params %}
        {% if P|int < T|int %}
          SET_VELOCITY_LIMIT ACCEL={P} ACCEL_TO_DECEL={ P|float * F|float }
        {% else %}
          SET_VELOCITY_LIMIT ACCEL={T} ACCEL_TO_DECEL={ T|float * F|float }
        {% endif %}
      {% else %}
        SET_VELOCITY_LIMIT ACCEL={P} ACCEL_TO_DECEL={ P|float * F|float }
      {% endif %}
    {% elif 'T' in params %}
      SET_VELOCITY_LIMIT ACCEL={T} ACCEL_TO_DECEL={ T|float * F|float }
    {% endif %}
  {% endif %}

[gcode_macro M205]
gcode:
  {% if 'X' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={X}
  {% elif 'Y' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={Y}
  {% endif %}

[gcode_macro M600]
default_parameter_X: 20
default_parameter_Y: 340
default_parameter_Z: 20
default_parameter_E: 570
gcode:
  {% if printer.pause_resume.is_paused %}
    {printer.gcode.action_respond_info("Already paused")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    {printer.gcode.action_respond_info("Please home XYZ first")}
  {% else %}
    PAUSE_PARK
    M702 U{E}
  {% endif %}

[gcode_macro M701]
default_parameter_I: 30
default_parameter_U: 570
default_parameter_P: 30
default_parameter_IF: 180
default_parameter_UF: 360
default_parameter_PF: 180
gcode:
  {% if printer.toolhead.status == "Printing" and not printer.pause_resume.is_paused %}
    {printer.gcode.action_respond_info("This command cannot be used while printing")}
  {% elif printer.extruder.temperature < 170 %}
    {printer.gcode.action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=M701_state
    M83
    {% if I|int > 0 %}
      G1 E{I} F{IF}
    {% endif %}
    G1 E{U} F{UF}
    {% if P|int > 0 %}
      G1 E{P} F{PF}
    {% endif %}
    RESTORE_GCODE_STATE NAME=M701_state
  {% endif %}

[gcode_macro M702]
default_parameter_P: 8
default_parameter_I: 30
default_parameter_U: 570
default_parameter_PF: 180
default_parameter_IF: 180
default_parameter_UF: 360
gcode:
  {% if printer.toolhead.status == "Printing" and not printer.pause_resume.is_paused %}
    {printer.gcode.action_respond_info("This command cannot be used while printing")}
  {% elif printer.extruder.temperature < 170 %}
    {printer.gcode.action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=M702_state
    M83
    {% if P|int > 0 %}
      G1 E{P} F{PF}
    {% endif %}
    {% if I|int > 0 %}
      G1 E-{I} F{IF}
    {% endif %}
    G1 E-{U} F{UF}
    RESTORE_GCODE_STATE NAME=M702_state
  {% endif %}

[gcode_macro M900]
gcode:
  {% if 'K' in params %}
    {% if 'E' in params %}
      SET_PRESSURE_ADVANCE EXTRUDER={E} ADVANCE={K}
    {% else %}
      SET_PRESSURE_ADVANCE ADVANCE={K}
    {% endif %}
  {% endif %}

[gcode_macro POWEROFF]
gcode:
  RESPOND TYPE=command MSG=action:poweroff

[gcode_macro NOTIFY]
gcode:
  {% if 'MSG' in params %}
    RESPOND TYPE=command MSG="action:notification {MSG}"
  {% endif %}

[gcode_macro LAZY_HOME]
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}

[gcode_macro RETRACT]
default_parameter_F: 600
gcode:
  {% if 'D' in params %}
    {% if printer.toolhead.status == "Printing" and not printer.pause_resume.is_paused %}
      {printer.gcode.action_respond_info("This command cannot be used while printing")}
    {% elif printer.extruder.temperature < 170 %}
      {printer.gcode.action_respond_info("Extruder temperature too low")}
    {% else %}
      SAVE_GCODE_STATE NAME=RETRACT_state
      M83
      G1 E-{D} F{F}
      RESTORE_GCODE_STATE NAME=RETRACT_state
    {% endif %}
  {% endif %}

[gcode_macro PAUSE_PARK]
default_parameter_X: 20
default_parameter_Y: 340
default_parameter_Z: 20
gcode:
  {% if printer.pause_resume.is_paused %}
    {printer.gcode.action_respond_info("Already paused")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    {printer.gcode.action_respond_info("Please home XYZ first")}
  {% else %}
    PAUSE
    RETRACT D=3
    G27 X{X} Y{Y} Z{Z}
  {% endif %}

[gcode_macro PRE_START]
default_parameter_Z: 0.0
default_parameter_WZ: 0.25
default_parameter_WN: 0.4
gcode:
  CLEAR_PAUSE
  M106 S0
  M220 S100
  M221 S100
  M900 K0
  DGUS_PRINT_START
  G28
  WIPE_LINE Z={WZ} N={WN}

[gcode_macro POST_END]
gcode:
  CLEAR_PAUSE
  DGUS_PRINT_END
  M220 S100
  M221 S100
  M900 K0
  {% if printer.extruder.temperature >= 170 %}
    M83
    G91
    G1 E-2 F2400
    G1 E-2 Z5 F2400
  {% endif %}
  M82
  G90
  G27
  M104 S0
  M140 S0
  M106 S0
  M84 X Y E
  SAVE_IF_SET

[gcode_macro WIPE_LINE]
default_parameter_Z: 0.25
default_parameter_N: 0.4
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
    {printer.gcode.action_respond_info("Please home XYZ first")}
  {% elif printer.extruder.temperature < 170 %}
    {printer.gcode.action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=WIPE_LINE_state
    M82
    G90
    G92 E0
    G1 X10 Y20 Z5 F3000
    G1 Z{Z} F3000
    G1 X10 Y150 F1500 E10.83
    G1 X{ N|float + 10.0 } F5000
    G1 Y22 F1500 E21.5
    G1 Y20 F5000
    RESTORE_GCODE_STATE NAME=WIPE_LINE_state
  {% endif %}

[gcode_macro SAVE_AT_END]
variable_save: 0
gcode:
  SET_GCODE_VARIABLE MACRO=SAVE_AT_END VARIABLE=save VALUE=1

[gcode_macro SAVE_IF_SET]
gcode:
  {% if printer["gcode_macro SAVE_AT_END"].save == 1 %}
    SAVE_CONFIG
  {% endif %}
  
[virtual_sdcard]
path: /home/pi/gcode_files

[pause_resume]

[display_status]

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F2100
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  
[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### end of definitions #####
    G91
    G1 E{E} F2100
    RESTORE_GCODE_STATE NAME=PAUSE_state
    BASE_RESUME

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.122500, 0.064375, 0.098125, 0.038750, 0.049375
#*# 	  0.116250, 0.050625, 0.082500, 0.015625, 0.024375
#*# 	  0.103750, 0.029375, 0.058750, -0.000625, 0.001875
#*# 	  0.067500, 0.001250, 0.018750, -0.041250, -0.040625
#*# 	  0.035625, -0.032500, -0.011875, -0.078750, -0.083125
#*# tension = 0.2
#*# min_x = 50.01
#*# algo = lagrange
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 30.01
#*# x_count = 5
#*# max_y = 190.0
#*# mesh_x_pps = 2
#*# max_x = 170.0
